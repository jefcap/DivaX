<resources>
    <string name="app_name">DivaX</string>
    <string name="insecure_logging">1- Insecure Logging</string>
    <string name="insecure_logging_description">Find out what is being logged where/how and vulnerable code</string>
    <string name="hardcoding_issues_1">2- Hardcoding Issues - Part 1</string>
    <string name="hardcoding_issue_1_description">Find out what is hardcoded and where</string>
    <string name="hardcoding_issues_2">3- Hardcoding Issues - Part 2</string>
    <string name="hardcoding_issue_2_description">Find out what is hardcoded and where. Hint: Developers sometimes will hardcode sensitive information for ease</string>
    <string name="insecure_data_storage_1">4- Insecure Data Storage - Part 1</string>
    <string name="insecure_data_storage_1_description">Find out where/how the credentials are being stored and the vulnerable code (SharedPreferences).</string>
    <string name="insecure_data_storage_2">5- Insecure Data Storage - Part 2</string>
    <string name="insecure_data_storage_2_description">Find out where/how the credentials are being stored and the vulnerable code (SQLite local Database).</string>
    <string name="insecure_data_storage_3">6- Insecure Data Storage - Part 3</string>
    <string name="insecure_data_storage_3_description">Find out where/how the credentials are being stored and the vulnerable code (Saved in internal R/W file).</string>
    <string name="insecure_data_storage_4">7- Insecure Data Storage - Part 4</string>
    <string name="insecure_data_storage_4_description">Find out where/how the credentials are being stored and the vulnerable code (Saved in external R/W file).</string>
    <string name="input_validation_issue_1">8- Input Validation Issues - Part 1</string>
    <string name="input_validation_issue_1_description">Try to access all user data without knowing any user name. There are three users by default and your task is to output data of all the three users with a single malicious search.</string>
    <string name="input_validation_issue_2">9- Input Validation Issues - Part 2</string>
    <string name="input_validation_issue_2_description">Try accessing any sensitive information apart from a web URL.</string>
    <string name="input_validation_issue_3">10- Input Validation Issues - Part 3</string>
    <string name="input_validation_issue_3_description">This is a Missile Launch App. Spread love not War! DOS the Damn thing. Your objective here is to NOT find the code and then launch the missiles, rather it is to crash the app (and then find the root cause the crash)</string>
    <string name="access_control_issue_1">11- Access Control Issues - Part 1</string>
    <string name="access_control_issue_1_description">You are able to access the API credentials when you click the button. Now, try to access the API credentials from outside the app (Activity with exported intent).</string>
    <string name="access_control_issue_2">12- Access Control Issues - Part 2</string>
    <string name="access_control_issue_2_description">You are able to access the API credentials when you click the button. Now, try to access the APO credentials from outside the app (Activity with exported intent and putextras).</string>
    <string name="access_control_issue_3">13- Access Control Issues - Part 3</string>
    <string name="access_control_issue_3_description">This is a private notes application. You can create a PIN once and access your notes after entering the correct pin. Now, try to access the private notes from outside the app without knowing the PIN.</string>
</resources>
